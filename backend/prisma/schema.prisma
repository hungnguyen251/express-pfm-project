// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/@prisma-mongo/prisma/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL_MONGO")
}

enum UserType {
  ADMIN
  USER
}

enum TransactionType {
  INCOME
  EXPENSE
}

enum VerificationType {
  PASSWORD_RESET
  TWO_FACTOR_AUTH
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String   @unique
  password String   @unique
  type     UserType @default(USER)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  accounts Account[]

  @@map("users")
}

model VerificationCode {
  id        String           @id @default(auto()) @map("_id") @db.ObjectId
  token     String
  email     String           @unique
  expiredAt DateTime
  type      VerificationType

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("verification_codes")
}

model Transaction {
  id        String          @id @default(auto()) @map("_id") @db.ObjectId
  accountId String          @db.ObjectId
  type      TransactionType
  amount    Float
  category  String
  date      DateTime        @default(now())

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  account Account @relation(fields: [accountId], references: [id])

  @@map("transactions")
}

model Account {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  balance Float   @default(0)
  type    String?
  userId  String  @db.ObjectId

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]

  @@map("accounts")
}
